name: master

on:
  push:
    branches:
      - master
env:
  APP: frontend-dings
  TEAM: plattformsikkerhet
  IMAGE: docker.pkg.github.com/${{ github.repository }}/frontend-dings

jobs:
  set_version:
    runs-on: ubuntu-latest
    steps:
      - name: create docker tag
        run: echo ::set-env name=TAG::$(echo ${{ github.sha }} | cut -c1-7)
    outputs:
      tag: ${{ env.TAG }}

  build:
    runs-on: ubuntu-latest
    needs: set_version
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - uses: actions/checkout@v1
        name: Checkout code
      - name: Cache node deps
        id: cache-node
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: install deps
        run: npm install
      - name: build client
        run: npm run build-client
      - name: build server
        run: npm run build-server
      - name: build docker image
        run: |
          npm prune --production
          docker build . --pull -t ${{ env.IMAGE }}:${{ needs.set_version.outputs.tag }}
      - name: push docker image
        run: |
          echo "$GITHUB_TOKEN" | docker login --username "$GITHUB_REPOSITORY" --password-stdin https://docker.pkg.github.com
          docker push ${{ env.IMAGE }}:${{ needs.set_version.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-dev-gcp:
    name: Deploy to dev-gcp
    needs: build
    if: "github.ref == 'refs/heads/master'"
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v1
        - uses: nais/deploy/actions/deploy@v1
          env:
            APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
            CLUSTER: dev-gcp
            RESOURCE: .nais/nais.yml
            VARS: .nais/dev.yml